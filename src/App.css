/* Heading */
/* ******* */
h1 {
    color: var(--text-color);
    font-size: 2.6em;
    font-weight: 900;
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 0.2em;
    width: 0;
    white-space: nowrap;
    margin: 0;
    box-sizing: border-box;
    border-right: solid 2px white;
    overflow: hidden;
    animation:
        typing 5s steps(12, end) 1s forwards,
        blink-cursor 500ms step-end infinite,
        remove-cursor 1s linear 16s forwards;
}

.heading-wrapper {
    display: flex;
    justify-content: center;
    padding-block: 1rem;
    margin-inline: auto;

    button {
        position: absolute;
        top: 1em;
        right: 1em;
        font-weight: 900;
        background-color: var(--bg-dark);
        border-radius: 4px;
        padding: 0.25rem 0.5rem;
        box-shadow:
            inset -1px -1px 3px 0px var(--dark-shadow),
            inset 1px 1px 3px 0px var(--light-shadow),
            1px 1px 4px 0px var(--dark-shadow);
    }
}

/* The typing effect */
@keyframes typing {
    from {
        width: 0
    }

    to {
        width: 100%
    }
}

/* The typewriter cursor effect */
@keyframes blink-cursor {
    from, to {
        border-color: transparent;
    }

    50% {
        border-color: white;
    }
}

@keyframes remove-cursor {
    to {
        border: none;
    }
}

.game-head-wrapper {
    display: grid;
    grid-template-columns: auto auto;
    align-items: center;
    justify-content: center;
    gap: var(--margin);

    button {
        --_shadow-blur: 15px;
        --_shadow-spread: 4px;
        font-weight: 900;
        height: 100%;
        aspect-ratio: 1 / 1.25;
        background-color: var(--button-color);
        border-radius: 10px;
        box-shadow: inset -3px -3px 10px 0px var(--dark-shadow),
            inset 3px 3px 10px 0px var(--light-shadow),
            var(--_shadow-spread) var(--_shadow-spread) var(--_shadow-blur) 0px var(--dark-shadow);
        transition: background-color 300ms ease-in-out, color 300ms ease-in-out;

        &:active:not(:disabled) {
            --_shadow-blur: 6px;
            --_shadow-spread: 2px;
        }

        &:disabled {
            color: darkgrey;
            background-color: grey;
            cursor: not-allowed;
        }

        &[data-hidden=true] {
            display: none;
        }
    }

    .start-btn {
        font-size: 2em;
    }

    .guess-btn {
        font-size: 2.6em;
    }
}


/* Pegs */
/* **** */
.peg-wrapper {
    position: relative;
    display: flex;
    gap: var(--margin);
    width: fit-content;
    padding: var(--margin);
    background-color: var(--bg-dark);
    box-shadow: 4px 4px 15px 0px var(--dark-shadow);
    border-radius: 10px;
}

.peg-inner {
    width: 2.2em;
    aspect-ratio: 1;
    border-radius: 1000px;
    background-color: var(--bg-color);
    box-shadow: inset 4px 4px 15px 0px var(--dark-shadow);
}

.peg {
    position: absolute;
    width: 2.2em;
    aspect-ratio: 1;
    border-radius: 1000px;
    box-shadow:
        inset -1px -1px 7px 0px var(--dark-shadow),
        inset 1px 1px 7px 0px var(--light-shadow);
    cursor: grab;
    transition: scale 200ms ease;

    &.red {
        background-color: var(--peg-red);
    }

    &.blue {
        background-color: var(--peg-blue);
    }

    &.green {
        background-color: var(--peg-green);
    }

    &.orange {
        background-color: var(--peg-orange);
    }

    &.purple {
        background-color: var(--peg-purple);
    }

    &.brown {
        background-color: var(--peg-brown);
    }
}


/* Game Board */
/* ********** */
.game-wrapper {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: var(--margin);
    padding: var(--margin);
    background-color: var(--bg-dark);
    box-shadow: 4px 4px 15px 0px var(--dark-shadow);
    border-radius: 10px;
}

.inner {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    gap: var(--margin);
    padding: calc(var(--margin) / 2);
}

.answer-wrapper,
.guess-inner,
.guess-result {
    border-radius: 6px;
    box-shadow: inset -3px -3px 10px 0px var(--dark-shadow),
        inset 3px 3px 10px 0px var(--light-shadow);
}

.guess-row {
    display: flex;
    flex-direction: column;
    gap: 0.25em;
}

/* peg holes */
.answer, .guess, .result {
    position: relative;
    width: 2em;
    aspect-ratio: 1;
    border-radius: 1000px;
    background-color: rgb(24, 24, 24);
    box-shadow: inset -1px -1px 5px 0px var(--light-shadow);
}

.guess-wrapper {
    display: flex;
    gap: 0.75em;
}

.guess-inner {
    background-color: var(--bg-overlay);
}

.guess {
    transition: opacity 300ms;
}

/* fade contents of locked container unless it is completed */
.guess-row.locked:not(.completed) {

    .guess,
    .result {
        opacity: 0.3;
    }
}


.guess,
.answer {
    .peg {
        position: absolute;
        top: -0.1em;
        left: -0.1em;
        cursor: default;
        z-index: 5;
    }
}

/* Result sections */
.guess-result {
    display: grid;
    grid-template-columns: auto auto;
    gap: calc(var(--margin) / 2);
    padding: calc(var(--margin) / 2);
    background-color: var(--bg-overlay);
    border-radius: 6px;
}

/* result holes */
.result {
    --_result-pin-delay: 300ms;
    width: 1em;
    box-shadow: inset -1px -1px 3px 0px var(--light-shadow);

    &:nth-of-type(2) {
        --_result-pin-delay: 1300ms;
    }

    &:nth-of-type(3) {
        --_result-pin-delay: 2300ms;
    }

    &:nth-of-type(4) {
        --_result-pin-delay: 3300ms;
    }
}

.result[data-peg=true]::after {
    content: '';
    position: absolute;
    inset: 0;
    width: 1.1em;
    aspect-ratio: 1;
    border-radius: 1000px;
    z-index: 20;
    box-shadow:
        inset -1px -1px 5px 0px var(--dark-shadow),
        inset 1px 1px 5px 0px var(--light-shadow);
    translate: -3em 3em;
    scale: 1.2;
    opacity: 0;
    animation: result-pins 2000ms ease var(--_result-pin-delay) forwards;
}

.result.yellow::after {
    background-color: var(--peg-result-yellow);
}

.result.white::after {
    background-color: var(--peg-result-white);
}

@keyframes result-pins {
    30% {
        opacity: 1;
        translate: -3em 3em;
        scale: 1.2;
    }

    100% {
        opacity: 1;
        translate: 0 0;
        scale: 1;
    }
}

/* Answer section */
.answer-wrapper {
    --_cover-position: -4em;
    position: relative;
    background-color: var(--bg-overlay);
    overflow: hidden;
}

.answer-wrapper:after {
    content: '';
    position: absolute;
    inset: 0.5em;
    background-color: var(--bg-dark);
    z-index: 20;
    border-radius: 6px;
    box-shadow:
        inset -3px -3px 10px 0px var(--dark-shadow),
        inset 3px 3px 10px 0px var(--light-shadow);
    translate: var(--_cover-position);
    transition: translate 2000ms;
}


/* Message Dialog */
/* ************** */
.message-dialog {
    position: relative;
    font-size: 1.2rem;
    color: var(--bg-dark);
    background-color: var(--text-color);
    width: 26em;
    max-width: 98vw;
    padding: 0;
    border: none;
    border-radius: 10px;
    opacity: 0;
    animation: dialog-in 500ms ease-in forwards;

    p {
        display: grid;
        gap: 0.5em;
        margin: 1rem 2rem 3rem;
    }

    .color {
        color: var(--peg-result-yellow);
        font-weight: 600;
        border-radius: 6px;
        padding-inline: 0.25em;
        background-color: var(--bg-color);

        &.white-span {
            color: var(--peg-result-white);
        }

        &::before {
            content: '';
            display: inline-block;
            width: 0.5em;
            aspect-ratio: 1;
            margin-inline-end: 0.5em;
            border: 1px solid var(--bg-dark);
            border-radius: 1000px;
            background-color: var(--peg-result-yellow);
        }

        &.white-span::before {
            background-color: var(--peg-result-white);
        }
    }

    .u-line {
        text-decoration: underline;
    }

    .green-span {
        color: var(--text-color);
        font-weight: 600;
        border-radius: 6px;
        padding-inline: 0.25em;
        background-color: var(--button-color);
    }

    .shadow-box {
        position: absolute;
        inset: 0;
        pointer-events: none;
        box-shadow:
            inset -3px -3px 10px 0px var(--dark-shadow),
            inset 3px 3px 10px 0px var(--light-shadow);
    }
}

.dialog-header {
    display: flex;
    align-items: start;
    margin: 1.5rem 1.5rem 0;

    h3 {
        font-size: 1.5rem;
        text-align: center;
        text-transform: capitalize;
        text-wrap-style: pretty;
        margin-block-end: 0;
    }

    button {
        font-weight: 900;
        background-color: var(--bg-dark);
        border-radius: 4px;
        padding: 0.25rem 0.5rem;
        margin-inline-start: auto;
        box-shadow:
            inset -1px -1px 3px 0px var(--dark-shadow),
            inset 1px 1px 3px 0px var(--light-shadow),
            1px 1px 2px 0px var(--dark-shadow);
    }
}

.dialog-footer {
    height: 3.5rem;
    background: linear-gradient(90deg,
            var(--peg-red) 0%,
            var(--peg-red) 16.66%,
            var(--peg-blue) 16.66%,
            var(--peg-blue) 33.33%,
            var(--peg-green) 33.33%,
            var(--peg-green) 50%,
            var(--peg-orange) 50%,
            var(--peg-orange) 66.66%,
            var(--peg-purple) 66.66%,
            var(--peg-purple) 83.33%,
            var(--peg-brown) 83.33%,
            var(--peg-brown) 100%);

}

.message-dialog::backdrop {
    background-color: var(--dark-shadow);
}

@keyframes dialog-in {
    100% {
        opacity: 1;
    }
}

@media screen and (max-width: 1023px) {
    body {
        font-size: 1rem;
    }
}


@media screen and (max-width: 800px) {
    .game-wrapper {
        grid-template-columns: auto;
        grid-template-rows: auto 1fr;
    }

    .inner {
        flex-direction: row;
    }

    .guess-wrapper {
        flex-direction: column;
    }

    .guess-row {
        flex-direction: row-reverse;
    }

    .guess-inner {
        flex-grow: 1;
    }

    .answer-wrapper:after {
        translate: 0 var(--_cover-position);
    }
}

@media screen and (max-width: 600px) {
    body {
        font-size: 0.8rem;
    }
}